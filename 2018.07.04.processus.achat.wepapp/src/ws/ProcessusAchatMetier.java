package ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2018-07-07T16:12:07.475+02:00
 * Generated source version: 3.1.12
 * 
 */
@WebService(targetNamespace = "http://ws/", name = "ProcessusAchatMetier")
@XmlSeeAlso({ObjectFactory.class})
public interface ProcessusAchatMetier {

    @WebMethod
    @RequestWrapper(localName = "getAllCommandeLivreNonPaye", targetNamespace = "http://ws/", className = "ws.GetAllCommandeLivreNonPaye")
    @ResponseWrapper(localName = "getAllCommandeLivreNonPayeResponse", targetNamespace = "http://ws/", className = "ws.GetAllCommandeLivreNonPayeResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ws.Commande> getAllCommandeLivreNonPaye();

    @WebMethod
    @RequestWrapper(localName = "getCommande", targetNamespace = "http://ws/", className = "ws.GetCommande")
    @ResponseWrapper(localName = "getCommandeResponse", targetNamespace = "http://ws/", className = "ws.GetCommandeResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ws.Commande getCommande(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    );

    @WebMethod
    @RequestWrapper(localName = "obtenirIdUtilisateur", targetNamespace = "http://ws/", className = "ws.ObtenirIdUtilisateur")
    @ResponseWrapper(localName = "obtenirIdUtilisateurResponse", targetNamespace = "http://ws/", className = "ws.ObtenirIdUtilisateurResponse")
    @WebResult(name = "return", targetNamespace = "")
    public int obtenirIdUtilisateur(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @RequestWrapper(localName = "getAllCommandeNonLivre", targetNamespace = "http://ws/", className = "ws.GetAllCommandeNonLivre")
    @ResponseWrapper(localName = "getAllCommandeNonLivreResponse", targetNamespace = "http://ws/", className = "ws.GetAllCommandeNonLivreResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ws.Commande> getAllCommandeNonLivre();

    @WebMethod
    @RequestWrapper(localName = "authentification", targetNamespace = "http://ws/", className = "ws.Authentification")
    @ResponseWrapper(localName = "authentificationResponse", targetNamespace = "http://ws/", className = "ws.AuthentificationResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ws.Utilisateur authentification(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1
    );

    @WebMethod
    @RequestWrapper(localName = "getAllFacture", targetNamespace = "http://ws/", className = "ws.GetAllFacture")
    @ResponseWrapper(localName = "getAllFactureResponse", targetNamespace = "http://ws/", className = "ws.GetAllFactureResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ws.Facture> getAllFacture();

    @WebMethod
    @RequestWrapper(localName = "ajouterLivraison", targetNamespace = "http://ws/", className = "ws.AjouterLivraison")
    @ResponseWrapper(localName = "ajouterLivraisonResponse", targetNamespace = "http://ws/", className = "ws.AjouterLivraisonResponse")
    public void ajouterLivraison(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3
    );

    @WebMethod
    @RequestWrapper(localName = "getLivraison", targetNamespace = "http://ws/", className = "ws.GetLivraison")
    @ResponseWrapper(localName = "getLivraisonResponse", targetNamespace = "http://ws/", className = "ws.GetLivraisonResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ws.Livraison getLivraison(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    );

    @WebMethod
    @RequestWrapper(localName = "ajouterFacture", targetNamespace = "http://ws/", className = "ws.AjouterFacture")
    @ResponseWrapper(localName = "ajouterFactureResponse", targetNamespace = "http://ws/", className = "ws.AjouterFactureResponse")
    public void ajouterFacture(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3
    );

    @WebMethod
    @RequestWrapper(localName = "updateLivraison", targetNamespace = "http://ws/", className = "ws.UpdateLivraison")
    @ResponseWrapper(localName = "updateLivraisonResponse", targetNamespace = "http://ws/", className = "ws.UpdateLivraisonResponse")
    public void updateLivraison(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ws.Date arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        java.lang.String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4
    );

    @WebMethod
    @RequestWrapper(localName = "ajouterCommande", targetNamespace = "http://ws/", className = "ws.AjouterCommande")
    @ResponseWrapper(localName = "ajouterCommandeResponse", targetNamespace = "http://ws/", className = "ws.AjouterCommandeResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ws.Commande ajouterCommande(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1
    );

    @WebMethod
    @RequestWrapper(localName = "getAllLivraison", targetNamespace = "http://ws/", className = "ws.GetAllLivraison")
    @ResponseWrapper(localName = "getAllLivraisonResponse", targetNamespace = "http://ws/", className = "ws.GetAllLivraisonResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ws.Livraison> getAllLivraison();

    @WebMethod
    @RequestWrapper(localName = "updateFacture", targetNamespace = "http://ws/", className = "ws.UpdateFacture")
    @ResponseWrapper(localName = "updateFactureResponse", targetNamespace = "http://ws/", className = "ws.UpdateFactureResponse")
    public void updateFacture(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ws.Date arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        java.lang.String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4
    );

    @WebMethod
    @RequestWrapper(localName = "supprimerLigneCommande", targetNamespace = "http://ws/", className = "ws.SupprimerLigneCommande")
    @ResponseWrapper(localName = "supprimerLigneCommandeResponse", targetNamespace = "http://ws/", className = "ws.SupprimerLigneCommandeResponse")
    public void supprimerLigneCommande(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    );

    @WebMethod
    @RequestWrapper(localName = "obtenirProfil", targetNamespace = "http://ws/", className = "ws.ObtenirProfil")
    @ResponseWrapper(localName = "obtenirProfilResponse", targetNamespace = "http://ws/", className = "ws.ObtenirProfilResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String obtenirProfil(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    );

    @WebMethod
    @RequestWrapper(localName = "ajouterLigneCommande", targetNamespace = "http://ws/", className = "ws.AjouterLigneCommande")
    @ResponseWrapper(localName = "ajouterLigneCommandeResponse", targetNamespace = "http://ws/", className = "ws.AjouterLigneCommandeResponse")
    public void ajouterLigneCommande(
        @WebParam(name = "arg0", targetNamespace = "")
        ws.LigneCommande arg0
    );

    @WebMethod
    @RequestWrapper(localName = "getFacture", targetNamespace = "http://ws/", className = "ws.GetFacture")
    @ResponseWrapper(localName = "getFactureResponse", targetNamespace = "http://ws/", className = "ws.GetFactureResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ws.Facture getFacture(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    );
}
